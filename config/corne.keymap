/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

//#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    //chosen { zmk,matrix-transform = &five_column_transform; };

    chosen { zmk,physical-layout = &foostan_corne_5col_layout; };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 15 25 33 34 35 26 16 6 7 17 27 28 18 8 9 19 29 32>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1 0 10 11 20 21 22 30 32 31 24 23 13 12 2 3 4 14>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
        };

        lt_slow: lt_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SLOW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <335>;
            flavor = "tap-preferred";
        };

        mt_slow: mt_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SLOW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <440>;
            flavor = "tap-preferred";
        };

        hml_lctl: hml_lctl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 15 25 33 34 35 26 16 6 7 17 27 28 18 8 9 19 29 23 1 3 21 32>;
            hold-trigger-on-release;
            label = "HML_LCTL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mt_slow GRAVE Q   &kp W              &kp E    &kp R                 &kp T               &kp Y                         &kp U             &kp I                &kp O              &kp P        &hml LEFT_GUI A       &hml LEFT_ALT S
&hml_lctl LCTRL D  &hml LEFT_SHIFT F  &lt 2 G  &lt 1 H               &hmr RSHIFT J       &hmr RCTRL K                  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp Z              &kp X        &kp C                 &kp V
&kp B              &kp N              &kp M    &mt_slow EQUAL COMMA  &mt_slow MINUS DOT  &mt_slow SINGLE_QUOTE FSLH    &kp TAB           &lt_slow 4 ENTER     &lt_slow 1 ESCAPE  &lt 2 SPACE  &lt_slow 3 BACKSPACE  &kp DEL
            >;
        };

        Nav {
            bindings = <
&trans     &trans     &trans     &trans     &trans    &kp LC(R)    &kp LC(C)  &kp LC(V)  &kp LC(X)   &kp LC(Z)  &kp LGUI  &kp LALT
&kp LCTRL  &kp LSHFT  &trans     &kp LEFT   &kp DOWN  &kp UP       &kp RIGHT  &kp RET    &caps_word  &trans     &trans    &kp CAPSLOCK
&trans     &kp HOME   &kp PG_UP  &kp PG_DN  &kp END   &kp INS      &trans     &trans     &trans      &trans     &trans    &trans
            >;
        };

        Num {
            bindings = <
&kp GRAVE  &kp N7  &kp N8    &kp N9  &kp N0     &trans       &trans    &trans    &trans     &trans  &kp EQUAL  &kp N4
&kp N5     &kp N6  &kp APOS  &trans  &kp RSHFT  &kp RCTRL    &kp RALT  &kp RGUI  &kp LBKT   &kp N1  &kp N2     &kp N3
&kp RBKT   &trans  &trans    &trans  &trans     &trans       &kp DOT   &kp FSLH  &kp MINUS  &trans  &trans     &trans
            >;
        };

        Sym {
            bindings = <
&kp TILDE    &kp AMPS   &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans       &trans    &trans    &trans          &trans           &kp PLUS     &kp DOLLAR
&kp PERCENT  &kp CARET  &kp DOUBLE_QUOTES  &trans                &kp RSHFT              &kp RCTRL    &kp RALT  &kp RGUI  &kp LEFT_BRACE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH
&kp G        &trans     &trans             &trans                &trans                 &trans       &trans    &kp PIPE  &kp UNDERSCORE  &trans           &trans       &trans
            >;
        };

        Fun {
            bindings = <
&kp LEFT_BRACKET  &kp C_MUTE  &kp C_PLAY   &kp RIGHT_BRACKET  &kp F   &trans     &kp F7  &kp F8   &kp F9        &kp F12       &kp LEFT_GUI  &kp LEFT_ALT
&kp LCTRL         &kp LSHFT   &key_repeat  &trans             &kp F4  &kp F5     &kp F6  &kp F11  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&bt BT_SEL 4      &trans      &kp F1       &kp F2             &kp F3  &kp F10    &trans  &trans   &trans        &trans        &trans        &trans
            >;
        };
    };
};
